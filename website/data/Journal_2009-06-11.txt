One user asked:

    i have a project P that contains in some package Z a class C.
    I want to know all of C's dependencies....

Here is how you would do it using the CLI.  Start by extracting all dependencies
from =C.class= and saving them in =df.xml=.

    % DependencyExtractor -xml -out df.xml Z/C.class

Then, reduce all the dependencies in =df.xml= to class-to-class dependencies and
save them to =c2c.df.xml=.

    % c2c -xml -out c2c.df.xml df.xml

Now, use =DependencyClosure= to list the first and second degree dependencies
from =P.C= in the graph in =c2c.df.xml=.  "Inbound" is classes that depend on
=Z.C= whereas "outbound" is classes that =Z.C= depends upon.

    % DependencyClosure c2c.df.xml -class-start-includes /Z.C/ -maximum-inbound-depth 0 -maximum-outbound-depth 1
    % DependencyClosure c2c.df.xml -class-start-includes /Z.C/ -maximum-inbound-depth 0 -maximum-outbound-depth 2

If you want to use the GUI instead, use the "Closure" tab and the
=File&nbsp;&gt;&gt;&nbsp;Closure= menu command.  First, use
=File&nbsp;&gt;&gt;&nbsp;Extract= to extract dependencies from =C.class=.  Then
select the "Closure" tab.  In the "Select programming elements" group of
controls, check "classes" and put =/Z.C/= in the "including" box.  In the "Show
dependencies (stop for closure), select "classes" but leave the textboxes empty.
Set "Follow inbounds" to 0 and set "Follow outbounds" to 1 to first degree or 2
for second degree dependencies.  Click =File&nbsp;&gt;&gt;&nbsp;Closure= and
see the results in the large results area.
