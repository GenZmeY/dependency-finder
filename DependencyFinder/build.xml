<project name="DependencyFinder" default="compiletestsdebug" basedir=".">

    <description>
	Dependency Finder, JarJarDiff, and OOMetrics
    </description>

    <patternset id="all.sources">
	<include name="**/*.java"/>
    </patternset>

    <path id="libs">
	<fileset dir="lib">
	    <include name="**/*.jar"/>
	</fileset>
	<pathelement location="classes"/>
    </path>

    <target name="init">
	<tstamp>
	    <format property="NOW"     pattern="yyyy-MM-dd HH:mm:ss"/>
	    <format property="NOW_CVS" pattern="yyyy-MM-dd hh:mm:ss"/>
	</tstamp>

	<property name="packageNames"     value="com.jeantessier.*"/>

	<property name="srcDir"           value="src"/>
	<property name="testsDir"         value="tests"/>
	<property name="binDir"           value="bin"/>
	<property name="classesDir"       value="classes"/>
	<property name="libDir"           value="lib"/>
	<property name="etcDir"           value="etc"/>
	<property name="webDir"           value="web"/>
	<property name="docsDir"          value="docs"/>
	<property name="apiDir"           value="${docsDir}/api"/>
	<property name="logsDir"          value="logs"/>

	<property name="srcFiles"         value="${srcDir}/**"/>
	<property name="testsFiles"       value="${testsDir}/**"/>
	<property name="binFiles"         value="${binDir}/**"/>
	<property name="libFiles"         value="${libDir}/**"/>
	<property name="etcFiles"         value="${etcDir}/**"/>
	<property name="docsFiles"        value="${docsDir}/**"/>

	<property name="jarFile"          value="${libDir}/${ant.project.name}.jar"/>
	<property name="warFile"          value="${ant.project.name}.war"/>
	<property name="zipFile"          value="${ant.project.name}.src.zip"/>
	<property name="distFile"         value="${ant.project.name}.zip"/>

	<property name="tomcat.home"      value="/language/Java/Jakarta/jakarta-tomcat-4.1.18-LE-jdk14"/>

	<property name="previous.release" value="20020711"/>
	<property name="last.release"     value="20030101"/>
	<property name="this.release"     value="1.0beta"/>

	<property name="cvsroot"          value=":pserver:anonymous@cvs.depfind.sourceforge.net:/cvsroot/depfind"/>
	<property name="cvsweb"           value="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/depfind/"/>
	<property name="cvsmodule"        value="DependencyFinder"/>

	<mkdir dir="${classesDir}"/>
	<mkdir dir="${apiDir}"/>
	<mkdir dir="${logsDir}"/>
    </target>

    <target name="compile" depends="init"
	    description="Compiles all classes">
        <javac destdir="${classesDir}">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiletests" depends="compile"
	    description="Compiles all classes and JUnit tests">
        <javac destdir="${classesDir}" excludes="JarJarDiff/**">
	    <src path="${testsDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
	<ant dir="tests/JarJarDiff" inheritAll="false"/>
    </target>

    <target name="deprecation" depends="init">
        <javac destdir="${classesDir}" deprecation="yes">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
        <javac destdir="${classesDir}" excludes="JarJarDiff/**" deprecation="yes">
	    <src path="${testsDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiledebug" depends="init"
	    description="Compiles all classes with debug flags">
        <javac destdir="${classesDir}" debug="on">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiletestsdebug" depends="compiledebug"
	    description="Compiles all classes and JUnit tests with debug flags (default)">
        <javac destdir="${classesDir}" excludes="JarJarDiff/**" debug="on">
	    <src path="${testsDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="tests" depends="compiletestsdebug">
	<ant dir="tests/JarJarDiff" inheritAll="false"/>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${jarFile}">
	    <manifest>
		<attribute name="Specification-Vendor"   value="Jean Tessier"/>
		<attribute name="Specification-Title"    value="Dependency Finder"/>
		<attribute name="Specification-Version"  value="${this.release}"/>
		<attribute name="Specification-Date"     value="${NOW}"/>
		<attribute name="Implementation-Vendor"  value="Jean Tessier"/>
		<attribute name="Implementation-Title"   value="Dependency Finder"/>
		<attribute name="Implementation-Version" value="${this.release}"/> 
		<attribute name="Implementation-Date"    value="${NOW}"/> 
		<attribute name="Implementation-URL"     value="http://depfind.sourceforge.net/"/>
		<attribute name="Compiler-Vendor"        value="${java.vendor}"/>
		<attribute name="Compiler-Title"         value="${java.runtime.name}"/>
		<attribute name="Compiler-Version"       value="${java.version}"/>
	    </manifest>
	    <zipfileset dir="${classesDir}" prefix="" includes="**/*.class"/>
	    <zipfileset dir="${srcDir}"     prefix="" includes="**/*.gif"/>
	</jar>
    </target>

    <target name="war" depends="jar"
	    description="Compiles and builds the web application archive">
        <jar jarfile="${warFile}">
	    <zipfileset dir="${webDir}"
	                prefix=""
			excludes="**/CSV"/>
	    <zipfileset dir="${srcDir}"
	                prefix="WEB-INF/${classesDir}"
			includes="**/*.properties"/>
	    <zipfileset dir="${libDir}"
	                prefix="WEB-INF/lib"
			includes="**/*.jar"
			excludes="**/x*.jar"/>
	</jar>
    </target>

    <target name="undeploy" depends="init">
        <delete dir="${tomcat.home}/work/Standalone/localhost/${ant.project.name}"
		includeEmptyDirs="true"
		failonerror="false"
	        verbose="true"/>
        <delete dir="${tomcat.home}/webapps/${ant.project.name}"
		includeEmptyDirs="true"
		failonerror="false"
	        verbose="true"/>
	<delete file="${tomcat.home}/webapps/${warFile}"
		failonerror="false"
	        verbose="true"/>
    </target>

    <target name="deploy" depends="war">
	<copy file="${warFile}" tofile="${tomcat.home}/webapps/${warFile}"
	      overwrite="true"/>
    </target>

    <target name="alltests" depends="init">
	<junit>
	    <formatter type="plain" usefile="no"/>
	    <test name="TestAll"/>
	    <classpath>
		<path refid="libs"/>
		<path location="${classesDir}"/>
	    </classpath>
	</junit>
    </target>

    <target name="src" depends="init"
	    description="Builds the source code archive">
        <zip zipfile="${zipFile}">
	    <zipfileset dir="."
			prefix="${ant.project.name}">
		<patternset>
		    <include name="build.xml"/>
		    <include name="license.txt"/>
		    <include name="readme.txt"/>
		    <include name="${srcFiles}"/>
		    <include name="${testsFiles}"/>
		    <include name="${binFiles}"/>
		    <include name="${etcFiles}"/>
		    <include name="${webFiles}"/>
		    <include name="${docsFiles}"/>
		    <exclude name="**/CVS"/>
		</patternset>
	    </zipfileset>
	</zip>
    </target>

    <target name="dist" depends="jar"
	    description="Compiles and builds the binary distribution">
        <zip zipfile="${distFile}">
	    <zipfileset dir="." prefix="${ant.project.name}">
		<patternset>
		    <include name="license.txt"/>
		    <include name="readme.txt"/>
		    <include name="${binFiles}"/>
		    <include name="${libFiles}"/>
		    <include name="${etcFiles}"/>
		    <include name="${docsFiles}"/>
		    <exclude name="**/CVS"/>
		    <exclude name="${binDir}/**/*.pl"/>
		    <exclude name="${docsDir}/**/*.txt"/>
		</patternset>
	    </zipfileset>
	    <zipfileset dir="${srcDir}" prefix="${ant.project.name}/${classesDir}">
		<patternset>
		    <include name="**/*.properties"/>
		</patternset>
	    </zipfileset>
	</zip>
    </target>

    <target name="ftp" depends="init">
        <ftp server="upload.sourceforge.net"
	     userid="anonymous"
	     password="jeantessier@hotmail.com"
	     remotedir="incoming"
	     action="put"
	     verbose="yes">
	    <fileset dir=".">
		<patternset>
		    <include name="${zipFile}"/>
		    <include name="${distFile}"/>
		    <include name="${warFile}"/>
		</patternset>
	    </fileset>
	</ftp>
    </target>

    <target name="textdocs" depends="init">
	<echo message="Processing Manual.txt ..."/>
	<exec executable="perl"
	      output="${docsDir}/Manual.html">
	    <arg value="${binDir}/txt2html.pl"/>
	    <arg value="${docsDir}/Manual.txt"/>
	</exec>
	<echo message="Processing Developer.txt ..."/>
	<exec executable="perl"
	      output="${docsDir}/Developer.html">
	    <arg value="${binDir}/txt2html.pl"/>
	    <arg value="${docsDir}/Developer.txt"/>
	</exec>
	<echo message="Processing Tools.txt ..."/>
	<exec executable="perl"
	      output="${docsDir}/Tools.html">
	    <arg value="${binDir}/txt2html.pl"/>
	    <arg value="${docsDir}/Tools.txt"/>
	</exec>
    </target>

    <target name="javadocs" depends="init">
        <javadoc packagenames="${packageNames}"
		 destdir="${apiDir}"
		 author="no"
	         version="no"
		 doctitle="${ant.project.name}">
	    <sourcepath path="${srcDir}"/>
	    <classpath>
		<path refid="libs"/>
		<pathelement location="${ant.home}/lib/ant.jar"/>
		<pathelement location="${java.home}/../lib/tools.jar"/>
	    </classpath>
	</javadoc>
    </target>

    <target name="docs" depends="textdocs, javadocs"
	    description="Builds the API documentation"/>

    <!--
	"docletPath" does not work in this version of Ant.
    -->
    <target name="doclint">
        <javadoc packagenames="${packageNames}"
		 version="no"
		 author="no">
	    <sourcepath path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <doclet name="com.jollem.doclint.DocLint"
		    path="C:\language\Java\doclint-1.0a2\doclint.jar"/>
  	</javadoc>
    </target>

    <!--
        UMLDoclet produces UML class diagrams in HTML next to
	a class's javadoc documentation.  The diagrams are
	simplistic and ugly.  Not very useful.
	"docletPath" does not work in this version of Ant.
    -->
    <target name="umldoclet">
        <javadoc sourcepath="${srcDir}"
	         destdir="${apiDir}"
	         packagenames="${packageNames}"
		 version="no"
		 author="no"
		 doclet="JP.co.esm.caddies.doclets.UMLDoclet"
		 docletPath="C:\language\Java\UMLDoclet"/>
    </target>

    <!--
        RedDoclet produces petal files for Rational Rose.
	But the resulting petal files do not model interfaces
	properly (abstract classes instead of Interface
	stereotype).
	"docletPath" does not work in this version of Ant.
    -->
    <target name="reddoclet">
        <javadoc sourcepath="${srcDir}"
	         packagenames="${packageNames}"
		 version="no"
		 author="no"
		 doclet="JP.co.esm.caddies.doclets.RedDoclet"
		 docletPath="D:\language\Java\java2rose"/>
    </target>

    <!--
	"docletPath" does not work in this version of Ant.
    -->
    <target name="listdocumentedelements" depends="init">
        <javadoc packagenames="${packageNames}"
		 version="no"
		 author="no"
		 maxmemory="128m">
	    <sourcepath path="src"/>
	    <classpath refid="libs"/>
	    <doclet name="com.jeantessier.diff.ListDocumentedElements"
		    path="${classesDir}">
		<param name="-tag" value="level"/>
		<param name="-invalid" value="developer"/>
		<param name="-out" value="df.txt"/>
	    </doclet>
	</javadoc>
    </target>

    <target name="extract" depends="jar">
	<taskdef name="extractor" classname="com.jeantessier.dependencyfinder.ant.DependencyExtractor">
	    <classpath>
		<path refid="libs"/>
		<pathelement location="${srcDir}"/>
	    </classpath>
	</taskdef>
	<extractor xml="yes" destfile="${this.release}.xml">
	    <path>
		<pathelement location="${jarFile}"/>
	    </path>
	</extractor>
	<xslt style="etc/DependenciesToHTML.xsl" in="${this.release}.xml" out="${this.release}.html">
	    <classpath refid="libs"/>
	</xslt>
	<xslt style="etc/DependenciesToText.xsl" in="${this.release}.xml" out="${this.release}.txt">
	    <classpath refid="libs"/>
	</xslt>
    </target>

    <target name="jarjardiff" depends="init">
	<taskdef name="jarjardiff" classname="com.jeantessier.dependencyfinder.ant.JarJarDiff">
	    <classpath>
		<path refid="libs"/>
		<pathelement location="${srcDir}"/>
	    </classpath>
	</taskdef>
	<jarjardiff name="Dependency Finder" oldlabel="${last.release}" newlabel="${this.release}" destfile="${last.release}-${this.release}.xml">
	    <old>
		<pathelement location="info/${last.release}.jar"/>
	    </old>
	    <new>
		<pathelement location="${jarFile}"/>
	    </new>
	</jarjardiff>
	<xslt style="etc/DiffToHTML.xsl" in="${last.release}-${this.release}.xml" out="${last.release}-${this.release}.html">
	    <classpath refid="libs"/>
	</xslt>
    </target>

    <target name="oometrics" depends="init">
	<taskdef name="oometrics" classname="com.jeantessier.dependencyfinder.ant.OOMetrics">
	    <classpath>
		<path refid="libs"/>
		<pathelement location="${srcDir}"/>
	    </classpath>
	</taskdef>
	<oometrics allmetrics="yes" destprefix="metrics-${this.release}" txt="yes" configuration="etc\MetricsConfig.xml">
	    <path>
		<pathelement location="${jarfile}"/>
	    </path>
	</oometrics>
	<oometrics allmetrics="yes" destprefix="metrics-${this.release}" xml="yes" configuration="etc\MetricsConfig.xml">
	    <path>
		<pathelement location="${jarfile}"/>
	    </path>
	</oometrics>
    </target>

    <target name="clearlogs" depends="init">
        <delete verbose="true">
	    <fileset dir=".">
		<patternset>
		    <include name="**/*.log"/>
		</patternset>
	    </fileset>
	</delete>
        <delete dir="${logsDir}" verbose="true"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${classesDir}"
	        includeEmptyDirs="true"
		verbose="true"/>
        <delete verbose="true">
	    <fileset dir="." defaultexcludes="no">
		<patternset>
		    <include name="**/*~"/>
		    <include name="**/*.bak"/>
		    <include name="**/*.class"/>
		</patternset>
	    </fileset>
	</delete>
	<ant dir="tests/JarJarDiff" target="clean" inheritAll="false"/>
    </target>

    <target name="cleandocs" depends="init">
        <delete dir="${apiDir}"
		includeEmptyDirs="true"
	        verbose="true"/>
        <delete verbose="true">
	    <fileset dir="docs">
		<patternset>
		    <include name="**/*.html"/>
		    <exclude name="index.html"/>
		    <exclude name="Menu.html"/>
		    <exclude name="Title.html"/>
		    <exclude name="tasks/**"/>
		</patternset>
	    </fileset>
	</delete>
        <delete verbose="true">
	    <fileset dir=".">
		<patternset>
		    <include name="**/*.red"/>
		</patternset>
	    </fileset>
	</delete>
    </target>

    <target name="realclean" depends="clearlogs, cleandocs, clean"
	    description="Removes all produced files">
	<delete file="${jarFile}"/>
    </target>

    <target name="lastreport" depends="init">
	<cvstagdiff cvsroot="${cvsroot}"
		    package="DependencyFinder"
		    startTag="release-${previous.release}"
		    endTag="release-${last.release}"
		    destFile="${previous.release}-${last.release}.xml"/>
	<style in="${previous.release}-${last.release}.xml"
	       out="${previous.release}-${last.release}.html"
	       style="${ant.home}/etc/tagdiff.xsl">
	    <param name="title"  expression="Dependency Finder"/>
	    <param name="module" expression="${cvsmodule}"/>
	    <param name="cvsweb" expression="${cvsweb}"/>
	</style>
    </target>

    <target name="currentreport" depends="init">
	<cvstagdiff cvsroot="${cvsroot}"
		    package="DependencyFinder"
		    startTag="release-${last.release}"
		    endDate="'${NOW_CVS}'"
		    destFile="${last.release}-now.xml"/>
	<style in="${last.release}-now.xml"
	       out="${last.release}-now.html"
	       style="${ant.home}/etc/tagdiff.xsl">
	    <param name="title"  expression="Dependency Finder"/>
	    <param name="module" expression="${cvsmodule}"/>
	    <param name="cvsweb" expression="${cvsweb}"/>
	</style>
    </target>

</project>

