<project name="DependencyFinder" default="compiletestsdebug" basedir=".">

    <patternset id="all.sources">
	<include name="**/*.java"/>
    </patternset>

    <path id="libs">
	<fileset dir="lib">
	    <include name="**/*.jar"/>
	</fileset>
	<pathelement location="classes"/>
    </path>

    <target name="init">
	<tstamp/>

	<property name="packageNames"   value="com.jeantessier.*"/>

	<property name="srcDir"         value="src"/>
	<property name="testsDir"       value="tests"/>
	<property name="binDir"         value="bin"/>
	<property name="classesDir"     value="classes"/>
	<property name="libDir"         value="lib"/>
	<property name="etcDir"         value="etc"/>
	<property name="webDir"         value="web"/>
	<property name="docsDir"        value="docs"/>
	<property name="apiDir"         value="${docsDir}/api"/>
	<property name="logsDir"        value="logs"/>

	<property name="srcFiles"       value="${srcDir}/**"/>
	<property name="testsFiles"     value="${testsDir}/**"/>
	<property name="binFiles"       value="${binDir}/**"/>
	<property name="libFiles"       value="${libDir}/**"/>
	<property name="etcFiles"       value="${etcDir}/**"/>
	<property name="docsFiles"      value="${docsDir}/**"/>

	<property name="jarFile"        value="${libDir}/${ant.project.name}.jar"/>
	<property name="warFile"        value="${ant.project.name}.war"/>
	<property name="zipFile"        value="${ant.project.name}.src.zip"/>
	<property name="distFile"       value="${ant.project.name}.zip"/>

	<property name="tomcat.home"    value="/language/Java/Jakarta/jakarta-tomcat-4.0.1"/>

	<mkdir dir="${classesDir}"/>
	<mkdir dir="${apiDir}"/>
	<mkdir dir="${logsDir}"/>
    </target>

    <target name="compile" depends="init">
        <javac destdir="${classesDir}">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiletests" depends="compile">
        <javac destdir="${classesDir}">
	    <src path="${testsDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="deprecation" depends="init">
        <javac destdir="${classesDir}" deprecation="yes">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiledebug" depends="init">
        <javac destdir="${classesDir}" debug="on">
	    <src path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="compiletestsdebug" depends="compiledebug">
        <javac destdir="${classesDir}" debug="on">
	    <src path="${testsDir}"/>
	    <classpath refid="libs"/>
	    <patternset refid="all.sources"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${jarFile}">
	    <zipfileset dir="${classesDir}" prefix="" includes="**/*.class"/>
	    <zipfileset dir="${srcDir}"     prefix="" includes="**/*.gif"/>
	</jar>
    </target>

    <target name="war" depends="jar">
        <jar jarfile="${warFile}">
	    <zipfileset dir="${webDir}"
	                prefix=""
			excludes="**/CSV"/>
	    <zipfileset dir="${srcDir}"
	                prefix="WEB-INF/${classesDir}"
			includes="**/*.properties"/>
	    <zipfileset dir="${libDir}"
	                prefix="WEB-INF/lib"
			includes="**/*.jar"
			excludes="**/x*.jar"/>
	</jar>
    </target>

    <target name="undeploy" depends="init">
        <delete dir="${tomcat.home}/webapps/${ant.project.name}"
		includeEmptyDirs="true"
	        verbose="true"/>
	<delete file="${tomcat.home}/webapps/${warFile}"
	        verbose="true"/>
    </target>

    <target name="deploy" depends="war">
	<copy file="${warFile}" tofile="${tomcat.home}/webapps/${warFile}"
	      overwrite="true"/>
    </target>

    <target name="alltests" depends="init">
	<junit>
	    <formatter type="plain" usefile="no"/>
	    <test name="TestAll"/>
	    <classpath>
		<path refid="libs"/>
		<path location="${classesDir}"/>
	    </classpath>
	</junit>
    </target>

    <target name="src" depends="init">
        <zip zipfile="${zipFile}">
	    <zipfileset dir="."
			prefix="${ant.project.name}">
		<patternset>
		    <include name="build.xml"/>
		    <include name="license.txt"/>
		    <include name="readme.txt"/>
		    <include name="${srcFiles}"/>
		    <include name="${testsFiles}"/>
		    <include name="${binFiles}"/>
		    <include name="${etcFiles}"/>
		    <include name="${webFiles}"/>
		    <include name="${docsFiles}"/>
		    <exclude name="**/CVS"/>
		</patternset>
	    </zipfileset>
	</zip>
    </target>

    <target name="dist" depends="jar">
        <zip zipfile="${distFile}">
	    <zipfileset dir="." prefix="${ant.project.name}">
		<patternset>
		    <include name="license.txt"/>
		    <include name="readme.txt"/>
		    <include name="${binFiles}"/>
		    <include name="${libFiles}"/>
		    <include name="${etcFiles}"/>
		    <include name="${docsFiles}"/>
		    <exclude name="**/CVS"/>
		    <exclude name="docs/**/*.txt"/>
		</patternset>
	    </zipfileset>
	    <zipfileset dir="${srcDir}" prefix="${ant.project.name}/${classesDir}">
		<patternset>
		    <include name="**/*.properties"/>
		</patternset>
	    </zipfileset>
	</zip>
    </target>

    <target name="ftp" depends="init">
        <ftp server="upload.sourceforge.net"
	     userid="anonymous"
	     password="jeantessier@hotmail.com"
	     remotedir="incoming"
	     action="put"
	     verbose="yes">
	    <fileset dir=".">
		<patternset>
		    <include name="${zipFile}"/>
		    <include name="${distFile}"/>
		    <include name="${warFile}"/>
		</patternset>
	    </fileset>
	</ftp>
    </target>

    <target name="docs" depends="init">
        <javadoc packagenames="${packageNames}"
		 destdir="${apiDir}"
		 author="no"
	         version="no"
		 doctitle="${ant.project.name}">
	    <sourcepath path="${srcDir}"/>
	    <classpath refid="libs"/>
	</javadoc>
    </target>

    <!--
	"docletPath" does not work in this version of Ant.
    -->
    <target name="doclint">
        <javadoc packagenames="${packageNames}"
		 version="no"
		 author="no">
	    <sourcepath path="${srcDir}"/>
	    <classpath refid="libs"/>
	    <doclet name="com.jollem.doclint.DocLint"
		    path="C:\language\Java\doclint-1.0a2\doclint.jar"/>
  	</javadoc>
    </target>

    <!--
        UMLDoclet produces UML class diagrams in HTML next to
	a class's javadoc documentation.  The diagrams are
	simplistic and ugly.  Not very useful.
	"docletPath" does not work in this version of Ant.
    -->
    <target name="umldoclet">
        <javadoc sourcepath="${srcDir}"
	         destdir="${apiDir}"
	         packagenames="${packageNames}"
		 version="no"
		 author="no"
		 doclet="JP.co.esm.caddies.doclets.UMLDoclet"
		 docletPath="C:\language\Java\UMLDoclet"/>
    </target>

    <!--
        RedDoclet produces petal files for Rational Rose.
	But the resulting petal files do not model interfaces
	properly (abstract classes instead of Interface
	stereotype).
	"docletPath" does not work in this version of Ant.
    -->
    <target name="reddoclet">
        <javadoc sourcepath="${srcDir}"
	         packagenames="${packageNames}"
		 version="no"
		 author="no"
		 doclet="JP.co.esm.caddies.doclets.RedDoclet"
		 docletPath="D:\language\Java\java2rose"/>
    </target>

    <target name="clearlogs" depends="init">
        <delete verbose="true">
	    <fileset dir=".">
		<patternset>
		    <include name="**/*.log"/>
		</patternset>
	    </fileset>
	</delete>
        <delete dir="logs" verbose="true"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${classesDir}"
	        includeEmptyDirs="true"
		verbose="true"/>
        <delete verbose="true">
	    <fileset dir="." defaultexcludes="no">
		<patternset>
		    <include name="**/*~"/>
		    <include name="**/*.bak"/>
		    <include name="**/*.class"/>
		</patternset>
	    </fileset>
	</delete>
    </target>

    <target name="cleandocs" depends="init">
        <delete dir="${apiDir}"
		includeEmptyDirs="true"
	        verbose="true"/>
        <delete verbose="true">
	    <fileset dir=".">
		<patternset>
		    <include name="**/*.red"/>
		</patternset>
	    </fileset>
	</delete>
    </target>

    <target name="realclean" depends="clearlogs, cleandocs, clean">
	<delete file="${jarFile}"/>
    </target>

</project>
