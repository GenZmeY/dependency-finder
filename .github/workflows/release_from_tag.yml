name: Release from Tag

on:
  push:
    tags:
      - "*"

jobs:

  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.head_commit.id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Generate distribution artifacts
        run: ant -Drelease=${{ github.ref_name }} dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Compiled with Java 17.

      - name: Upload TAR release asset
        id: upload-release-asset-tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/DependencyFinder-${{ github.ref_name }}.tar.gz
          asset_name: DependencyFinder-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip
      - name: URL to uploaded TAR release asset
        run: echo "- [DependencyFinder-${{ github.ref_name }}.tar.gz](${{ steps.upload-release-asset-tar.outputs.browser_download_url }})" >> $GITHUB_STEP_SUMMARY

      - name: Upload WAR release asset
        id: upload-release-asset-war
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/DependencyFinder-${{ github.ref_name }}.war
          asset_name: DependencyFinder-${{ github.ref_name }}.war
          asset_content_type: application/java-archive
      - name: URL to uploaded WAR release asset
        run: echo "- [DependencyFinder-${{ github.ref_name }}.war](${{ steps.upload-release-asset-war.outputs.browser_download_url }})" >> $GITHUB_STEP_SUMMARY

      - name: Upload ZIP release asset
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/DependencyFinder-${{ github.ref_name }}.zip
          asset_name: DependencyFinder-${{ github.ref_name }}.zip
          asset_content_type: application/zip
      - name: URL to uploaded ZIP release asset
        run: echo "- [DependencyFinder-${{ github.ref_name }}.zip](${{ steps.upload-release-asset-zip.outputs.browser_download_url }})" >> $GITHUB_STEP_SUMMARY
